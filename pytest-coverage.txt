============================= test session starts ==============================
platform linux -- Python 3.10.14, pytest-8.1.1, pluggy-1.4.0 -- /opt/hostedtoolcache/Python/3.10.14/x64/bin/python
cachedir: .pytest_cache
rootdir: /home/runner/work/ImgDataConvertCodeGen/ImgDataConvertCodeGen
configfile: setup.cfg
plugins: cov-5.0.0
collecting ... collected 51 items

tests/test_code_generation.py::test_convert_code_generator_init PASSED   [  1%]
tests/test_code_generation.py::test_knowledge_graph_property PASSED      [  3%]
tests/test_code_generation.py::test_conversion_path PASSED               [  5%]
tests/test_code_generation.py::test_generate_conversion_no_path PASSED   [  7%]
tests/test_code_generation.py::test_generate_conversion_same_type PASSED [  9%]
tests/test_code_generation.py::test_generate_conversion_multiple_steps PASSED [ 11%]
tests/test_code_generation.py::test_generate_conversion_using_cache PASSED [ 13%]
tests/test_conversion_code_execution.py::test_code_generation_using_metadata PASSED [ 15%]
tests/test_conversion_code_in_kg.py::test_all_conversion_code_exec_on_cpu FAILED [ 17%]
tests/test_conversion_code_in_kg.py::test_conversion_code_exec_using_pytorch_gpu SKIPPED [ 19%]
tests/test_conversion_code_in_kg.py::test_conversion_code_exec_using_tensorflow_gpu SKIPPED [ 21%]
tests/test_conversion_code_in_kg.py::test_conversion_code_exec_using_tensorflow_gpu_torch_gpu SKIPPED [ 23%]
tests/test_io.py::test_load_graph_from_file PASSED                       [ 25%]
tests/test_io.py::test_load_graph_with_invalid_path PASSED               [ 27%]
tests/test_io.py::test_save_graph_to_file PASSED                         [ 29%]
tests/test_io.py::test_save_graph_with_invalid_path PASSED               [ 31%]
tests/test_knowledge_graph.py::test_knowledge_graph_init PASSED          [ 33%]
tests/test_knowledge_graph.py::test_add_new_node PASSED                  [ 35%]
tests/test_knowledge_graph.py::test_add_edge PASSED                      [ 37%]
tests/test_knowledge_graph.py::test_get_edge PASSED                      [ 39%]
tests/test_knowledge_graph.py::test_edge_failure PASSED                  [ 41%]
tests/test_knowledge_graph.py::test_save_to_file PASSED                  [ 43%]
tests/test_knowledge_graph.py::test_get_shortest_path PASSED             [ 45%]
tests/test_knowledge_graph.py::test_get_shortest_path_no_path PASSED     [ 47%]
tests/test_knowledge_graph.py::test_get_shortest_path_same_node PASSED   [ 49%]
tests/test_knowledge_graph.py::test_knowledge_graph_str PASSED           [ 50%]
tests/test_metadata.py::test_encode_to_string PASSED                     [ 52%]
tests/test_metadata.py::test_decode_to_dict PASSED                       [ 54%]
tests/test_metadata.py::test_exact_match PASSED                          [ 56%]
tests/test_metadata.py::test_representation_match_no_channel_match PASSED [ 58%]
tests/test_metadata.py::test_no_representation_match PASSED              [ 60%]
tests/test_metadata.py::test_rgb_bgr_match PASSED                        [ 62%]
tests/test_metadata.py::test_empty_candidate_list PASSED                 [ 64%]
tests/test_metadata.py::test_one_candidata PASSED                        [ 66%]
tests/test_metadata_differ.py::test_both_metadata_match_data_repr PASSED [ 68%]
tests/test_metadata_differ.py::test_one_metadata_missing_data_repr PASSED [ 70%]
tests/test_metadata_differ.py::test_one_metadata_different_data_repr PASSED [ 72%]
tests/test_metadata_differ.py::test_both_metadata_missing_data_repr PASSED [ 74%]
tests/test_metadata_differ.py::test_both_metadata_different_data_repr PASSED [ 76%]
tests/test_metadata_differ.py::test_is_differ_value_for_key_true PASSED  [ 78%]
tests/test_metadata_differ.py::test_is_differ_value_for_key_false PASSED [ 80%]
tests/test_py_interface.py::test_add_conversion_for_metadata_pair_single_value PASSED [ 82%]
tests/test_py_interface.py::test_add_conversion_for_metadata_pair_list_values PASSED [ 84%]
tests/test_py_interface.py::test_add_conversion_for_metadata_pair_empty PASSED [ 86%]
tests/test_py_interface.py::test_add_conversion_for_metadata_pair_none PASSED [ 88%]
tests/test_py_interface.py::test_get_convert_path PASSED                 [ 90%]
tests/test_py_interface.py::test_get_conversion_code PASSED              [ 92%]
tests/test_util.py::test_remove_intermediate_functon_call PASSED         [ 94%]
tests/test_util.py::test_extract_func_body_fail PASSED                   [ 96%]
tests/test_util.py::test_func_obj_to_str_function PASSED                 [ 98%]
tests/test_util.py::test_exclude_key_from_list PASSED                    [100%]

=================================== FAILURES ===================================
_____________________ test_all_conversion_code_exec_on_cpu _____________________

code_generator = <imgdataconvertcodegen.code_generator.ConvertCodeGenerator object at 0x7fa63a2c9e40>

    def test_all_conversion_code_exec_on_cpu(code_generator):
        kg = code_generator.knowledge_graph
        for edge in kg.edges:
            if is_code_exec_on_cpu(edge):
>               assert_exec_of_conversion_code_in_edge(*edge, kg)

tests/test_conversion_code_in_kg.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source_metadata = {'channel_order': 'channel last', 'color_channel': 'bgr', 'data_representation': 'numpy.ndarray', 'device': 'cpu', ...}
target_metadata = {'channel_order': 'channel last', 'color_channel': 'gray', 'data_representation': 'numpy.ndarray', 'device': 'cpu', ...}
kg = <imgdataconvertcodegen.knowledge_graph_construction.knowledge_graph.KnowledgeGraph object at 0x7fa6a5f66fb0>

    def assert_exec_of_conversion_code_in_edge(source_metadata, target_metadata, kg):
        edge_data = kg.get_edge_data(source_metadata, target_metadata)
        conversion = edge_data.get('conversion')
        assert conversion is not None, f"No conversion from {source_metadata} to {target_metadata}"
        assert len(conversion) == 2, (f"Expected two elements in the conversions, but got: {conversion} from"
                                      f" {source_metadata} to {target_metadata}")
        assert isinstance(conversion[0], str), (f"Expected the first element of the conversion to be a string, but got:"
                                                f" {conversion[0]} from {source_metadata} to {target_metadata}")
        assert isinstance(conversion[1], str), (f"Expected the second element of the conversion to be a string, but got:"
                                                f" {conversion[1]} from {source_metadata} to {target_metadata}")
        error_message = (f"conversion from\n {source_metadata} to\n {target_metadata} failed\n "
                         f"imports: {conversion[0]}\nconversion function: \n {conversion[1]}\nfrom {edge_data.get('factory')}")
    
        try:
            source_image, target_image = get_input_image_and_expected_output(source_metadata, target_metadata)
            func_name = re.search(r'(?<=def )\w+', conversion[1]).group(0)
    
            scope = {}
            scope.update({'source_image': source_image})
            exec(f"""{conversion[0]}
    {conversion[1]}
    actual_image = {func_name}(source_image)""", scope)
            actual_image = scope.get('actual_image')
        except Exception as e:
            raise AssertionError(f"Failed to execute conversion code from {error_message}") from e
    
>       assert is_image_equal(target_image,
                              actual_image), f'expected {target_image}, but actual {actual_image}. {error_message}'
E       AssertionError: expected [[[[127]
E            [181]
E            [117]
E            [ 68]
E            [131]
E            [ 70]
E            [106]
E            [ 89]
E            [163]
E            [137]
E            [ 86]
E            [171]
E            [ 92]
E            [235]
E            [132]
E            [141]
E            [127]
E            [184]
E            [133]
E            [125]]
E         
E           [[121]
E            [123]
E            [161]
E            [238]
E            [103]
E            [131]
E            [204]
E            [ 56]
E            [195]
E            [ 77]
E            [120]
E            [ 62]
E            [122]
E            [210]
E            [142]
E            [ 92]
E            [ 74]
E            [ 20]
E            [ 61]
E            [ 72]]
E         
E           [[205]
E            [108]
E            [ 72]
E            [ 80]
E            [ 68]
E            [159]
E            [130]
E            [178]
E            [ 75]
E            [174]
E            [152]
E            [132]
E            [177]
E            [162]
E            [137]
E            [173]
E            [ 86]
E            [101]
E            [ 74]
E            [ 57]]
E         
E           [[127]
E            [115]
E            [131]
E            [184]
E            [112]
E            [143]
E            [164]
E            [187]
E            [163]
E            [116]
E            [113]
E            [164]
E            [216]
E            [194]
E            [224]
E            [125]
E            [171]
E            [ 77]
E            [165]
E            [121]]
E         
E           [[ 65]
E            [ 43]
E            [ 81]
E            [ 88]
E            [155]
E            [124]
E            [163]
E            [ 88]
E            [ 80]
E            [101]
E            [155]
E            [ 56]
E            [158]
E            [ 76]
E            [138]
E            [108]
E            [101]
E            [119]
E            [108]
E            [118]]
E         
E           [[124]
E            [ 83]
E            [ 55]
E            [112]
E            [203]
E            [112]
E            [103]
E            [ 50]
E            [136]
E            [174]
E            [238]
E            [100]
E            [108]
E            [ 34]
E            [152]
E            [127]
E            [102]
E            [ 93]
E            [ 39]
E            [189]]
E         
E           [[198]
E            [104]
E            [215]
E            [123]
E            [103]
E            [ 62]
E            [146]
E            [126]
E            [150]
E            [199]
E            [ 85]
E            [ 46]
E            [ 86]
E            [166]
E            [201]
E            [205]
E            [ 81]
E            [ 60]
E            [ 40]
E            [ 40]]
E         
E           [[152]
E            [138]
E            [133]
E            [145]
E            [178]
E            [235]
E            [169]
E            [183]
E            [200]
E            [ 34]
E            [167]
E            [171]
E            [138]
E            [ 41]
E            [ 74]
E            [ 98]
E            [116]
E            [140]
E            [189]
E            [136]]
E         
E           [[144]
E            [111]
E            [143]
E            [219]
E            [ 78]
E            [106]
E            [137]
E            [ 44]
E            [ 31]
E            [144]
E            [109]
E            [ 60]
E            [ 84]
E            [137]
E            [ 28]
E            [229]
E            [ 35]
E            [182]
E            [209]
E            [ 92]]
E         
E           [[ 88]
E            [123]
E            [147]
E            [105]
E            [185]
E            [180]
E            [ 90]
E            [164]
E            [127]
E            [168]
E            [ 76]
E            [ 46]
E            [ 76]
E            [171]
E            [150]
E            [ 64]
E            [132]
E            [191]
E            [ 94]
E            [185]]
E         
E           [[219]
E            [150]
E            [115]
E            [ 77]
E            [172]
E            [ 63]
E            [ 42]
E            [ 99]
E            [ 93]
E            [ 55]
E            [138]
E            [152]
E            [137]
E            [181]
E            [ 71]
E            [126]
E            [ 83]
E            [ 88]
E            [135]
E            [210]]
E         
E           [[124]
E            [ 87]
E            [ 35]
E            [160]
E            [177]
E            [201]
E            [160]
E            [ 59]
E            [169]
E            [174]
E            [ 59]
E            [ 88]
E            [ 43]
E            [180]
E            [147]
E            [185]
E            [144]
E            [175]
E            [183]
E            [ 58]]
E         
E           [[170]
E            [143]
E            [ 87]
E            [ 94]
E            [148]
E            [ 27]
E            [201]
E            [111]
E            [209]
E            [180]
E            [183]
E            [141]
E            [ 80]
E            [ 76]
E            [ 60]
E            [199]
E            [142]
E            [149]
E            [196]
E            [175]]
E         
E           [[157]
E            [126]
E            [ 79]
E            [123]
E            [123]
E            [ 58]
E            [ 85]
E            [ 78]
E            [148]
E            [ 64]
E            [153]
E            [ 96]
E            [ 74]
E            [216]
E            [210]
E            [109]
E            [ 90]
E            [175]
E            [157]
E            [ 87]]
E         
E           [[216]
E            [ 58]
E            [190]
E            [ 53]
E            [154]
E            [ 46]
E            [116]
E            [ 92]
E            [145]
E            [ 95]
E            [ 88]
E            [150]
E            [113]
E            [139]
E            [117]
E            [235]
E            [154]
E            [187]
E            [ 81]
E            [162]]
E         
E           [[ 84]
E            [102]
E            [ 33]
E            [103]
E            [145]
E            [125]
E            [150]
E            [149]
E            [ 97]
E            [159]
E            [ 42]
E            [130]
E            [193]
E            [ 93]
E            [150]
E            [117]
E            [102]
E            [ 54]
E            [164]
E            [153]]
E         
E           [[150]
E            [ 92]
E            [191]
E            [186]
E            [ 69]
E            [ 67]
E            [153]
E            [135]
E            [193]
E            [162]
E            [160]
E            [ 96]
E            [170]
E            [134]
E            [176]
E            [222]
E            [182]
E            [ 58]
E            [ 95]
E            [104]]
E         
E           [[ 44]
E            [ 61]
E            [ 51]
E            [210]
E            [ 83]
E            [122]
E            [ 68]
E            [145]
E            [ 51]
E            [222]
E            [167]
E            [ 83]
E            [141]
E            [ 91]
E            [152]
E            [164]
E            [131]
E            [128]
E            [110]
E            [ 36]]
E         
E           [[ 87]
E            [ 84]
E            [ 73]
E            [241]
E            [ 69]
E            [120]
E            [ 59]
E            [180]
E            [203]
E            [146]
E            [139]
E            [ 77]
E            [132]
E            [189]
E            [219]
E            [186]
E            [161]
E            [ 56]
E            [100]
E            [ 79]]
E         
E           [[193]
E            [135]
E            [155]
E            [115]
E            [ 19]
E            [ 90]
E            [170]
E            [ 65]
E            [186]
E            [ 47]
E            [137]
E            [123]
E            [124]
E            [170]
E            [ 72]
E            [204]
E            [165]
E            [ 67]
E            [192]
E            [168]]]], but actual [[[[127]
E            [181]
E            [117]
E            [ 68]
E            [131]
E            [ 70]
E            [106]
E            [ 89]
E            [163]
E            [137]
E            [ 86]
E            [171]
E            [ 92]
E            [235]
E            [132]
E            [141]
E            [127]
E            [184]
E            [133]
E            [125]]
E         
E           [[121]
E            [123]
E            [161]
E            [238]
E            [103]
E            [131]
E            [204]
E            [ 56]
E            [195]
E            [ 77]
E            [120]
E            [ 62]
E            [122]
E            [210]
E            [142]
E            [ 92]
E            [ 74]
E            [ 20]
E            [ 61]
E            [ 72]]
E         
E           [[205]
E            [108]
E            [ 72]
E            [ 80]
E            [ 68]
E            [159]
E            [130]
E            [178]
E            [ 75]
E            [174]
E            [152]
E            [132]
E            [177]
E            [162]
E            [137]
E            [173]
E            [ 86]
E            [101]
E            [ 74]
E            [ 57]]
E         
E           [[127]
E            [115]
E            [131]
E            [184]
E            [112]
E            [143]
E            [164]
E            [187]
E            [163]
E            [116]
E            [113]
E            [164]
E            [216]
E            [194]
E            [224]
E            [125]
E            [171]
E            [ 77]
E            [165]
E            [121]]
E         
E           [[ 65]
E            [ 43]
E            [ 81]
E            [ 88]
E            [155]
E            [124]
E            [163]
E            [ 88]
E            [ 80]
E            [101]
E            [155]
E            [ 56]
E            [158]
E            [ 76]
E            [138]
E            [108]
E            [101]
E            [119]
E            [108]
E            [118]]
E         
E           [[124]
E            [ 83]
E            [ 55]
E            [112]
E            [203]
E            [112]
E            [103]
E            [ 50]
E            [136]
E            [174]
E            [238]
E            [100]
E            [108]
E            [ 34]
E            [152]
E            [127]
E            [102]
E            [ 93]
E            [ 39]
E            [189]]
E         
E           [[198]
E            [104]
E            [215]
E            [123]
E            [104]
E            [ 62]
E            [146]
E            [126]
E            [150]
E            [199]
E            [ 85]
E            [ 46]
E            [ 86]
E            [166]
E            [201]
E            [205]
E            [ 81]
E            [ 60]
E            [ 40]
E            [ 40]]
E         
E           [[152]
E            [138]
E            [133]
E            [145]
E            [178]
E            [235]
E            [169]
E            [183]
E            [200]
E            [ 34]
E            [167]
E            [171]
E            [138]
E            [ 41]
E            [ 74]
E            [ 98]
E            [116]
E            [140]
E            [189]
E            [136]]
E         
E           [[144]
E            [111]
E            [143]
E            [219]
E            [ 78]
E            [106]
E            [137]
E            [ 44]
E            [ 31]
E            [144]
E            [109]
E            [ 60]
E            [ 84]
E            [137]
E            [ 28]
E            [229]
E            [ 35]
E            [182]
E            [209]
E            [ 92]]
E         
E           [[ 88]
E            [123]
E            [147]
E            [105]
E            [185]
E            [180]
E            [ 90]
E            [164]
E            [127]
E            [168]
E            [ 76]
E            [ 46]
E            [ 76]
E            [171]
E            [150]
E            [ 64]
E            [132]
E            [191]
E            [ 94]
E            [185]]
E         
E           [[219]
E            [150]
E            [115]
E            [ 77]
E            [172]
E            [ 63]
E            [ 42]
E            [ 99]
E            [ 93]
E            [ 55]
E            [138]
E            [152]
E            [137]
E            [181]
E            [ 71]
E            [126]
E            [ 83]
E            [ 88]
E            [135]
E            [210]]
E         
E           [[124]
E            [ 87]
E            [ 35]
E            [160]
E            [177]
E            [201]
E            [160]
E            [ 59]
E            [169]
E            [174]
E            [ 59]
E            [ 88]
E            [ 43]
E            [180]
E            [147]
E            [185]
E            [144]
E            [175]
E            [183]
E            [ 58]]
E         
E           [[170]
E            [143]
E            [ 87]
E            [ 94]
E            [148]
E            [ 27]
E            [201]
E            [111]
E            [209]
E            [180]
E            [183]
E            [141]
E            [ 80]
E            [ 76]
E            [ 60]
E            [199]
E            [142]
E            [149]
E            [196]
E            [175]]
E         
E           [[157]
E            [126]
E            [ 79]
E            [123]
E            [123]
E            [ 58]
E            [ 85]
E            [ 78]
E            [148]
E            [ 64]
E            [153]
E            [ 96]
E            [ 74]
E            [216]
E            [210]
E            [109]
E            [ 90]
E            [175]
E            [157]
E            [ 87]]
E         
E           [[216]
E            [ 58]
E            [190]
E            [ 53]
E            [154]
E            [ 46]
E            [116]
E            [ 92]
E            [145]
E            [ 95]
E            [ 88]
E            [150]
E            [113]
E            [139]
E            [117]
E            [235]
E            [154]
E            [187]
E            [ 81]
E            [162]]
E         
E           [[ 84]
E            [102]
E            [ 33]
E            [103]
E            [145]
E            [125]
E            [150]
E            [149]
E            [ 97]
E            [159]
E            [ 42]
E            [130]
E            [193]
E            [ 93]
E            [150]
E            [117]
E            [102]
E            [ 54]
E            [164]
E            [153]]
E         
E           [[150]
E            [ 92]
E            [191]
E            [186]
E            [ 69]
E            [ 67]
E            [153]
E            [135]
E            [193]
E            [162]
E            [160]
E            [ 96]
E            [170]
E            [134]
E            [176]
E            [222]
E            [182]
E            [ 58]
E            [ 95]
E            [104]]
E         
E           [[ 44]
E            [ 61]
E            [ 51]
E            [210]
E            [ 83]
E            [122]
E            [ 68]
E            [145]
E            [ 51]
E            [222]
E            [167]
E            [ 83]
E            [141]
E            [ 91]
E            [152]
E            [164]
E            [131]
E            [128]
E            [110]
E            [ 36]]
E         
E           [[ 87]
E            [ 84]
E            [ 73]
E            [241]
E            [ 69]
E            [120]
E            [ 59]
E            [180]
E            [203]
E            [146]
E            [139]
E            [ 77]
E            [132]
E            [189]
E            [219]
E            [186]
E            [161]
E            [ 56]
E            [100]
E            [ 79]]
E         
E           [[193]
E            [135]
E            [155]
E            [115]
E            [ 19]
E            [ 90]
E            [170]
E            [ 65]
E            [186]
E            [ 47]
E            [137]
E            [123]
E            [124]
E            [170]
E            [ 72]
E            [204]
E            [165]
E            [ 67]
E            [192]
E            [168]]]]. conversion from
E          {'data_representation': 'numpy.ndarray', 'color_channel': 'bgr', 'channel_order': 'channel last', 'minibatch_input': True, 'image_data_type': 'uint8', 'device': 'cpu'} to
E          {'data_representation': 'numpy.ndarray', 'color_channel': 'gray', 'channel_order': 'channel last', 'minibatch_input': True, 'image_data_type': 'uint8', 'device': 'cpu'} failed
E          imports: import numpy as np
E         conversion function: 
E          def convert(var):
E             type_in = var.dtype
E             var = np.expand_dims(np.dot(var[..., :3], [0.114, 0.587, 0.299]), axis=-1)
E             return var.astype(type_in)
E         from channel_last_bgr_to_gray in /home/runner/work/ImgDataConvertCodeGen/ImgDataConvertCodeGen/src/imgdataconvertcodegen/knowledge_graph_construction/edge_factories/numpy.py
E       assert False
E        +  where False = is_image_equal(array([[[[127],\n         [181],\n         [117],\n         [ 68],\n         [131],\n         [ 70],\n         [106],\n         [ 89],\n         [163],\n         [137],\n         [ 86],\n         [171],\n         [ 92],\n         [235],\n         [132],\n         [141],\n         [127],\n         [184],\n         [133],\n         [125]],\n\n        [[121],\n         [123],\n         [161],\n         [238],\n         [103],\n         [131],\n         [204],\n         [ 56],\n         [195],\n         [ 77],\n         [120],\n         [ 62],\n         [122],\n         [210],\n         [142],\n         [ 92],\n         [ 74],\n         [ 20],\n         [ 61],\n         [ 72]],\n\n        [[205],\n         [108],\n         [ 72],\n         [ 80],\n         [ 68],\n         [159],\n         [130],\n         [178],\n         [ 75],\n         [174],\n         [152],\n         [132],\n         [177],\n         [162],\n         [137],\n         [173],\n         [ 86],\n         [101],\n         [ 74],\n         [ 57]],\n\n        [[127],\n         [115],\n         [131],\n         [184],\n         [112],\n         [143],\n         [164],\n         [187],\n         [163],\n         [116],\n         [113],\n         [164],\n         [216],\n         [194],\n        ...   [153],\n         [135],\n         [193],\n         [162],\n         [160],\n         [ 96],\n         [170],\n         [134],\n         [176],\n         [222],\n         [182],\n         [ 58],\n         [ 95],\n         [104]],\n\n        [[ 44],\n         [ 61],\n         [ 51],\n         [210],\n         [ 83],\n         [122],\n         [ 68],\n         [145],\n         [ 51],\n         [222],\n         [167],\n         [ 83],\n         [141],\n         [ 91],\n         [152],\n         [164],\n         [131],\n         [128],\n         [110],\n         [ 36]],\n\n        [[ 87],\n         [ 84],\n         [ 73],\n         [241],\n         [ 69],\n         [120],\n         [ 59],\n         [180],\n         [203],\n         [146],\n         [139],\n         [ 77],\n         [132],\n         [189],\n         [219],\n         [186],\n         [161],\n         [ 56],\n         [100],\n         [ 79]],\n\n        [[193],\n         [135],\n         [155],\n         [115],\n         [ 19],\n         [ 90],\n         [170],\n         [ 65],\n         [186],\n         [ 47],\n         [137],\n         [123],\n         [124],\n         [170],\n         [ 72],\n         [204],\n         [165],\n         [ 67],\n         [192],\n         [168]]]], dtype=uint8), array([[[[127],\n         [181],\n         [117],\n         [ 68],\n         [131],\n         [ 70],\n         [106],\n         [ 89],\n         [163],\n         [137],\n         [ 86],\n         [171],\n         [ 92],\n         [235],\n         [132],\n         [141],\n         [127],\n         [184],\n         [133],\n         [125]],\n\n        [[121],\n         [123],\n         [161],\n         [238],\n         [103],\n         [131],\n         [204],\n         [ 56],\n         [195],\n         [ 77],\n         [120],\n         [ 62],\n         [122],\n         [210],\n         [142],\n         [ 92],\n         [ 74],\n         [ 20],\n         [ 61],\n         [ 72]],\n\n        [[205],\n         [108],\n         [ 72],\n         [ 80],\n         [ 68],\n         [159],\n         [130],\n         [178],\n         [ 75],\n         [174],\n         [152],\n         [132],\n         [177],\n         [162],\n         [137],\n         [173],\n         [ 86],\n         [101],\n         [ 74],\n         [ 57]],\n\n        [[127],\n         [115],\n         [131],\n         [184],\n         [112],\n         [143],\n         [164],\n         [187],\n         [163],\n         [116],\n         [113],\n         [164],\n         [216],\n         [194],\n        ...   [153],\n         [135],\n         [193],\n         [162],\n         [160],\n         [ 96],\n         [170],\n         [134],\n         [176],\n         [222],\n         [182],\n         [ 58],\n         [ 95],\n         [104]],\n\n        [[ 44],\n         [ 61],\n         [ 51],\n         [210],\n         [ 83],\n         [122],\n         [ 68],\n         [145],\n         [ 51],\n         [222],\n         [167],\n         [ 83],\n         [141],\n         [ 91],\n         [152],\n         [164],\n         [131],\n         [128],\n         [110],\n         [ 36]],\n\n        [[ 87],\n         [ 84],\n         [ 73],\n         [241],\n         [ 69],\n         [120],\n         [ 59],\n         [180],\n         [203],\n         [146],\n         [139],\n         [ 77],\n         [132],\n         [189],\n         [219],\n         [186],\n         [161],\n         [ 56],\n         [100],\n         [ 79]],\n\n        [[193],\n         [135],\n         [155],\n         [115],\n         [ 19],\n         [ 90],\n         [170],\n         [ 65],\n         [186],\n         [ 47],\n         [137],\n         [123],\n         [124],\n         [170],\n         [ 72],\n         [204],\n         [165],\n         [ 67],\n         [192],\n         [168]]]], dtype=uint8))

tests/test_conversion_code_in_kg.py:46: AssertionError
- generated xml file: /home/runner/work/ImgDataConvertCodeGen/ImgDataConvertCodeGen/pytest.xml -

---------- coverage: platform linux, python 3.10.14-final-0 ----------
Name                                                                      Stmts   Miss Branch BrPart  Cover   Missing
---------------------------------------------------------------------------------------------------------------------
src/imgdataconvertcodegen/end_metadata_mapper.py                            131     90     52      7    26%   39, 41, 55, 67, 82-100, 112-125, 137-151, 163-177, 190-221, 238, 253, 259, 273-292, 304-336
src/imgdataconvertcodegen/interface_cmd.py                                   11     11      0      0     0%   12-38
src/imgdataconvertcodegen/interface_py_api.py                                25      4      0      0    84%   61-62, 66-67
src/imgdataconvertcodegen/knowledge_graph_construction/constructor.py        71      9     22      2    88%   31-32, 36, 75, 80-82, 85-86
src/imgdataconvertcodegen/knowledge_graph_construction/metedata/util.py      24      0     22      2    96%   24->27, 25->24
---------------------------------------------------------------------------------------------------------------------
TOTAL                                                                       779    114    336     11    85%

16 files skipped due to complete coverage.

=========================== short test summary info ============================
FAILED tests/test_conversion_code_in_kg.py::test_all_conversion_code_exec_on_cpu - AssertionError: expected [[[[127]
     [181]
     [117]
     [ 68]
     [131]
     [ 70]
     [106]
     [ 89]
     [163]
     [137]
     [ 86]
     [171]
     [ 92]
     [235]
     [132]
     [141]
     [127]
     [184]
     [133]
     [125]]
  
    [[121]
     [123]
     [161]
     [238]
     [103]
     [131]
     [204]
     [ 56]
     [195]
     [ 77]
     [120]
     [ 62]
     [122]
     [210]
     [142]
     [ 92]
     [ 74]
     [ 20]
     [ 61]
     [ 72]]
  
    [[205]
     [108]
     [ 72]
     [ 80]
     [ 68]
     [159]
     [130]
     [178]
     [ 75]
     [174]
     [152]
     [132]
     [177]
     [162]
     [137]
     [173]
     [ 86]
     [101]
     [ 74]
     [ 57]]
  
    [[127]
     [115]
     [131]
     [184]
     [112]
     [143]
     [164]
     [187]
     [163]
     [116]
     [113]
     [164]
     [216]
     [194]
     [224]
     [125]
     [171]
     [ 77]
     [165]
     [121]]
  
    [[ 65]
     [ 43]
     [ 81]
     [ 88]
     [155]
     [124]
     [163]
     [ 88]
     [ 80]
     [101]
     [155]
     [ 56]
     [158]
     [ 76]
     [138]
     [108]
     [101]
     [119]
     [108]
     [118]]
  
    [[124]
     [ 83]
     [ 55]
     [112]
     [203]
     [112]
     [103]
     [ 50]
     [136]
     [174]
     [238]
     [100]
     [108]
     [ 34]
     [152]
     [127]
     [102]
     [ 93]
     [ 39]
     [189]]
  
    [[198]
     [104]
     [215]
     [123]
     [103]
     [ 62]
     [146]
     [126]
     [150]
     [199]
     [ 85]
     [ 46]
     [ 86]
     [166]
     [201]
     [205]
     [ 81]
     [ 60]
     [ 40]
     [ 40]]
  
    [[152]
     [138]
     [133]
     [145]
     [178]
     [235]
     [169]
     [183]
     [200]
     [ 34]
     [167]
     [171]
     [138]
     [ 41]
     [ 74]
     [ 98]
     [116]
     [140]
     [189]
     [136]]
  
    [[144]
     [111]
     [143]
     [219]
     [ 78]
     [106]
     [137]
     [ 44]
     [ 31]
     [144]
     [109]
     [ 60]
     [ 84]
     [137]
     [ 28]
     [229]
     [ 35]
     [182]
     [209]
     [ 92]]
  
    [[ 88]
     [123]
     [147]
     [105]
     [185]
     [180]
     [ 90]
     [164]
     [127]
     [168]
     [ 76]
     [ 46]
     [ 76]
     [171]
     [150]
     [ 64]
     [132]
     [191]
     [ 94]
     [185]]
  
    [[219]
     [150]
     [115]
     [ 77]
     [172]
     [ 63]
     [ 42]
     [ 99]
     [ 93]
     [ 55]
     [138]
     [152]
     [137]
     [181]
     [ 71]
     [126]
     [ 83]
     [ 88]
     [135]
     [210]]
  
    [[124]
     [ 87]
     [ 35]
     [160]
     [177]
     [201]
     [160]
     [ 59]
     [169]
     [174]
     [ 59]
     [ 88]
     [ 43]
     [180]
     [147]
     [185]
     [144]
     [175]
     [183]
     [ 58]]
  
    [[170]
     [143]
     [ 87]
     [ 94]
     [148]
     [ 27]
     [201]
     [111]
     [209]
     [180]
     [183]
     [141]
     [ 80]
     [ 76]
     [ 60]
     [199]
     [142]
     [149]
     [196]
     [175]]
  
    [[157]
     [126]
     [ 79]
     [123]
     [123]
     [ 58]
     [ 85]
     [ 78]
     [148]
     [ 64]
     [153]
     [ 96]
     [ 74]
     [216]
     [210]
     [109]
     [ 90]
     [175]
     [157]
     [ 87]]
  
    [[216]
     [ 58]
     [190]
     [ 53]
     [154]
     [ 46]
     [116]
     [ 92]
     [145]
     [ 95]
     [ 88]
     [150]
     [113]
     [139]
     [117]
     [235]
     [154]
     [187]
     [ 81]
     [162]]
  
    [[ 84]
     [102]
     [ 33]
     [103]
     [145]
     [125]
     [150]
     [149]
     [ 97]
     [159]
     [ 42]
     [130]
     [193]
     [ 93]
     [150]
     [117]
     [102]
     [ 54]
     [164]
     [153]]
  
    [[150]
     [ 92]
     [191]
     [186]
     [ 69]
     [ 67]
     [153]
     [135]
     [193]
     [162]
     [160]
     [ 96]
     [170]
     [134]
     [176]
     [222]
     [182]
     [ 58]
     [ 95]
     [104]]
  
    [[ 44]
     [ 61]
     [ 51]
     [210]
     [ 83]
     [122]
     [ 68]
     [145]
     [ 51]
     [222]
     [167]
     [ 83]
     [141]
     [ 91]
     [152]
     [164]
     [131]
     [128]
     [110]
     [ 36]]
  
    [[ 87]
     [ 84]
     [ 73]
     [241]
     [ 69]
     [120]
     [ 59]
     [180]
     [203]
     [146]
     [139]
     [ 77]
     [132]
     [189]
     [219]
     [186]
     [161]
     [ 56]
     [100]
     [ 79]]
  
    [[193]
     [135]
     [155]
     [115]
     [ 19]
     [ 90]
     [170]
     [ 65]
     [186]
     [ 47]
     [137]
     [123]
     [124]
     [170]
     [ 72]
     [204]
     [165]
     [ 67]
     [192]
     [168]]]], but actual [[[[127]
     [181]
     [117]
     [ 68]
     [131]
     [ 70]
     [106]
     [ 89]
     [163]
     [137]
     [ 86]
     [171]
     [ 92]
     [235]
     [132]
     [141]
     [127]
     [184]
     [133]
     [125]]
  
    [[121]
     [123]
     [161]
     [238]
     [103]
     [131]
     [204]
     [ 56]
     [195]
     [ 77]
     [120]
     [ 62]
     [122]
     [210]
     [142]
     [ 92]
     [ 74]
     [ 20]
     [ 61]
     [ 72]]
  
    [[205]
     [108]
     [ 72]
     [ 80]
     [ 68]
     [159]
     [130]
     [178]
     [ 75]
     [174]
     [152]
     [132]
     [177]
     [162]
     [137]
     [173]
     [ 86]
     [101]
     [ 74]
     [ 57]]
  
    [[127]
     [115]
     [131]
     [184]
     [112]
     [143]
     [164]
     [187]
     [163]
     [116]
     [113]
     [164]
     [216]
     [194]
     [224]
     [125]
     [171]
     [ 77]
     [165]
     [121]]
  
    [[ 65]
     [ 43]
     [ 81]
     [ 88]
     [155]
     [124]
     [163]
     [ 88]
     [ 80]
     [101]
     [155]
     [ 56]
     [158]
     [ 76]
     [138]
     [108]
     [101]
     [119]
     [108]
     [118]]
  
    [[124]
     [ 83]
     [ 55]
     [112]
     [203]
     [112]
     [103]
     [ 50]
     [136]
     [174]
     [238]
     [100]
     [108]
     [ 34]
     [152]
     [127]
     [102]
     [ 93]
     [ 39]
     [189]]
  
    [[198]
     [104]
     [215]
     [123]
     [104]
     [ 62]
     [146]
     [126]
     [150]
     [199]
     [ 85]
     [ 46]
     [ 86]
     [166]
     [201]
     [205]
     [ 81]
     [ 60]
     [ 40]
     [ 40]]
  
    [[152]
     [138]
     [133]
     [145]
     [178]
     [235]
     [169]
     [183]
     [200]
     [ 34]
     [167]
     [171]
     [138]
     [ 41]
     [ 74]
     [ 98]
     [116]
     [140]
     [189]
     [136]]
  
    [[144]
     [111]
     [143]
     [219]
     [ 78]
     [106]
     [137]
     [ 44]
     [ 31]
     [144]
     [109]
     [ 60]
     [ 84]
     [137]
     [ 28]
     [229]
     [ 35]
     [182]
     [209]
     [ 92]]
  
    [[ 88]
     [123]
     [147]
     [105]
     [185]
     [180]
     [ 90]
     [164]
     [127]
     [168]
     [ 76]
     [ 46]
     [ 76]
     [171]
     [150]
     [ 64]
     [132]
     [191]
     [ 94]
     [185]]
  
    [[219]
     [150]
     [115]
     [ 77]
     [172]
     [ 63]
     [ 42]
     [ 99]
     [ 93]
     [ 55]
     [138]
     [152]
     [137]
     [181]
     [ 71]
     [126]
     [ 83]
     [ 88]
     [135]
     [210]]
  
    [[124]
     [ 87]
     [ 35]
     [160]
     [177]
     [201]
     [160]
     [ 59]
     [169]
     [174]
     [ 59]
     [ 88]
     [ 43]
     [180]
     [147]
     [185]
     [144]
     [175]
     [183]
     [ 58]]
  
    [[170]
     [143]
     [ 87]
     [ 94]
     [148]
     [ 27]
     [201]
     [111]
     [209]
     [180]
     [183]
     [141]
     [ 80]
     [ 76]
     [ 60]
     [199]
     [142]
     [149]
     [196]
     [175]]
  
    [[157]
     [126]
     [ 79]
     [123]
     [123]
     [ 58]
     [ 85]
     [ 78]
     [148]
     [ 64]
     [153]
     [ 96]
     [ 74]
     [216]
     [210]
     [109]
     [ 90]
     [175]
     [157]
     [ 87]]
  
    [[216]
     [ 58]
     [190]
     [ 53]
     [154]
     [ 46]
     [116]
     [ 92]
     [145]
     [ 95]
     [ 88]
     [150]
     [113]
     [139]
     [117]
     [235]
     [154]
     [187]
     [ 81]
     [162]]
  
    [[ 84]
     [102]
     [ 33]
     [103]
     [145]
     [125]
     [150]
     [149]
     [ 97]
     [159]
     [ 42]
     [130]
     [193]
     [ 93]
     [150]
     [117]
     [102]
     [ 54]
     [164]
     [153]]
  
    [[150]
     [ 92]
     [191]
     [186]
     [ 69]
     [ 67]
     [153]
     [135]
     [193]
     [162]
     [160]
     [ 96]
     [170]
     [134]
     [176]
     [222]
     [182]
     [ 58]
     [ 95]
     [104]]
  
    [[ 44]
     [ 61]
     [ 51]
     [210]
     [ 83]
     [122]
     [ 68]
     [145]
     [ 51]
     [222]
     [167]
     [ 83]
     [141]
     [ 91]
     [152]
     [164]
     [131]
     [128]
     [110]
     [ 36]]
  
    [[ 87]
     [ 84]
     [ 73]
     [241]
     [ 69]
     [120]
     [ 59]
     [180]
     [203]
     [146]
     [139]
     [ 77]
     [132]
     [189]
     [219]
     [186]
     [161]
     [ 56]
     [100]
     [ 79]]
  
    [[193]
     [135]
     [155]
     [115]
     [ 19]
     [ 90]
     [170]
     [ 65]
     [186]
     [ 47]
     [137]
     [123]
     [124]
     [170]
     [ 72]
     [204]
     [165]
     [ 67]
     [192]
     [168]]]]. conversion from
   {'data_representation': 'numpy.ndarray', 'color_channel': 'bgr', 'channel_order': 'channel last', 'minibatch_input': True, 'image_data_type': 'uint8', 'device': 'cpu'} to
   {'data_representation': 'numpy.ndarray', 'color_channel': 'gray', 'channel_order': 'channel last', 'minibatch_input': True, 'image_data_type': 'uint8', 'device': 'cpu'} failed
   imports: import numpy as np
  conversion function: 
   def convert(var):
      type_in = var.dtype
      var = np.expand_dims(np.dot(var[..., :3], [0.114, 0.587, 0.299]), axis=-1)
      return var.astype(type_in)
  from channel_last_bgr_to_gray in /home/runner/work/ImgDataConvertCodeGen/ImgDataConvertCodeGen/src/imgdataconvertcodegen/knowledge_graph_construction/edge_factories/numpy.py
assert False
 +  where False = is_image_equal(array([[[[127],\n         [181],\n         [117],\n         [ 68],\n         [131],\n         [ 70],\n         [106],\n         [ 89],\n         [163],\n         [137],\n         [ 86],\n         [171],\n         [ 92],\n         [235],\n         [132],\n         [141],\n         [127],\n         [184],\n         [133],\n         [125]],\n\n        [[121],\n         [123],\n         [161],\n         [238],\n         [103],\n         [131],\n         [204],\n         [ 56],\n         [195],\n         [ 77],\n         [120],\n         [ 62],\n         [122],\n         [210],\n         [142],\n         [ 92],\n         [ 74],\n         [ 20],\n         [ 61],\n         [ 72]],\n\n        [[205],\n         [108],\n         [ 72],\n         [ 80],\n         [ 68],\n         [159],\n         [130],\n         [178],\n         [ 75],\n         [174],\n         [152],\n         [132],\n         [177],\n         [162],\n         [137],\n         [173],\n         [ 86],\n         [101],\n         [ 74],\n         [ 57]],\n\n        [[127],\n         [115],\n         [131],\n         [184],\n         [112],\n         [143],\n         [164],\n         [187],\n         [163],\n         [116],\n         [113],\n         [164],\n         [216],\n         [194],\n        ...   [153],\n         [135],\n         [193],\n         [162],\n         [160],\n         [ 96],\n         [170],\n         [134],\n         [176],\n         [222],\n         [182],\n         [ 58],\n         [ 95],\n         [104]],\n\n        [[ 44],\n         [ 61],\n         [ 51],\n         [210],\n         [ 83],\n         [122],\n         [ 68],\n         [145],\n         [ 51],\n         [222],\n         [167],\n         [ 83],\n         [141],\n         [ 91],\n         [152],\n         [164],\n         [131],\n         [128],\n         [110],\n         [ 36]],\n\n        [[ 87],\n         [ 84],\n         [ 73],\n         [241],\n         [ 69],\n         [120],\n         [ 59],\n         [180],\n         [203],\n         [146],\n         [139],\n         [ 77],\n         [132],\n         [189],\n         [219],\n         [186],\n         [161],\n         [ 56],\n         [100],\n         [ 79]],\n\n        [[193],\n         [135],\n         [155],\n         [115],\n         [ 19],\n         [ 90],\n         [170],\n         [ 65],\n         [186],\n         [ 47],\n         [137],\n         [123],\n         [124],\n         [170],\n         [ 72],\n         [204],\n         [165],\n         [ 67],\n         [192],\n         [168]]]], dtype=uint8), array([[[[127],\n         [181],\n         [117],\n         [ 68],\n         [131],\n         [ 70],\n         [106],\n         [ 89],\n         [163],\n         [137],\n         [ 86],\n         [171],\n         [ 92],\n         [235],\n         [132],\n         [141],\n         [127],\n         [184],\n         [133],\n         [125]],\n\n        [[121],\n         [123],\n         [161],\n         [238],\n         [103],\n         [131],\n         [204],\n         [ 56],\n         [195],\n         [ 77],\n         [120],\n         [ 62],\n         [122],\n         [210],\n         [142],\n         [ 92],\n         [ 74],\n         [ 20],\n         [ 61],\n         [ 72]],\n\n        [[205],\n         [108],\n         [ 72],\n         [ 80],\n         [ 68],\n         [159],\n         [130],\n         [178],\n         [ 75],\n         [174],\n         [152],\n         [132],\n         [177],\n         [162],\n         [137],\n         [173],\n         [ 86],\n         [101],\n         [ 74],\n         [ 57]],\n\n        [[127],\n         [115],\n         [131],\n         [184],\n         [112],\n         [143],\n         [164],\n         [187],\n         [163],\n         [116],\n         [113],\n         [164],\n         [216],\n         [194],\n        ...   [153],\n         [135],\n         [193],\n         [162],\n         [160],\n         [ 96],\n         [170],\n         [134],\n         [176],\n         [222],\n         [182],\n         [ 58],\n         [ 95],\n         [104]],\n\n        [[ 44],\n         [ 61],\n         [ 51],\n         [210],\n         [ 83],\n         [122],\n         [ 68],\n         [145],\n         [ 51],\n         [222],\n         [167],\n         [ 83],\n         [141],\n         [ 91],\n         [152],\n         [164],\n         [131],\n         [128],\n         [110],\n         [ 36]],\n\n        [[ 87],\n         [ 84],\n         [ 73],\n         [241],\n         [ 69],\n         [120],\n         [ 59],\n         [180],\n         [203],\n         [146],\n         [139],\n         [ 77],\n         [132],\n         [189],\n         [219],\n         [186],\n         [161],\n         [ 56],\n         [100],\n         [ 79]],\n\n        [[193],\n         [135],\n         [155],\n         [115],\n         [ 19],\n         [ 90],\n         [170],\n         [ 65],\n         [186],\n         [ 47],\n         [137],\n         [123],\n         [124],\n         [170],\n         [ 72],\n         [204],\n         [165],\n         [ 67],\n         [192],\n         [168]]]], dtype=uint8))
=================== 1 failed, 47 passed, 3 skipped in 12.34s ===================
