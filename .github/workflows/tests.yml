# This workflow will install Python dependencies and run tests with a python on ubuntu without GPU
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
    pull-requests: write
    contents: write
    id-token: write

jobs:
  tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements_cpu.txt ]; then pip install -r requirements_cpu.txt; fi

    - name: Add project root to PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pip install -e .
        pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app tests/ | tee pytest-coverage.txt
        
    - name: Pytest coverage comment
      id: coverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml

    - name: Check the output coverage
      run: |
          echo "Coverage Percentage - ${{ steps.coverageComment.outputs.coverage }}" 
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}" 
          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}" 
          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}" 
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}" 
          # Handle HTML content safely
          echo "${{ steps.coverageComment.outputs.coverageHtml }}" > coverageHtml.html
          echo "Coverage HTML output saved to coverageHtml.html"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}" 


    - name: Create the Badge
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.PYTEST_COVERAGE_COMMENT }}
        gistID: 5e90d640f8c212ab7bbac38f72323f80
        filename: pytest-coverage-comment__main.json
        label: Coverage Report
        message: ${{ steps.coverageComment.outputs.coverage }}
        color: ${{ steps.coverageComment.outputs.color }}
        namedLogo: python
