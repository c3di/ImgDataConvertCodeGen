{"directed": true, "multigraph": false, "graph": {}, "nodes": [{"data_representation": "numpy.ndarray", "color_channel": "rgb", "channel_order": "channel last", "minibatch_input": false, "data_type": "uint8", "intensity_range": "0to255", "device": "cpu", "id": 1}, {"data_representation": "numpy.ndarray", "color_channel": "bgr", "channel_order": "channel last", "minibatch_input": false, "data_type": "uint8", "intensity_range": "0to255", "device": "cpu", "id": 2}, {"data_representation": "torch.tensor", "color_channel": "rgb", "channel_order": "channel last", "minibatch_input": false, "data_type": "uint8", "intensity_range": "0to255", "device": "cpu", "id": 3}, {"data_representation": "torch.tensor", "color_channel": "rgb", "channel_order": "channel first", "minibatch_input": false, "data_type": "uint8", "intensity_range": "0to255", "device": "cpu", "id": 4}, {"data_representation": "torch.tensor", "color_channel": "rgb", "channel_order": "channel first", "minibatch_input": true, "data_type": "uint8", "intensity_range": "0to255", "device": "cpu", "id": 5}], "links": [{"conversion": "def convert(var):\n  return var[:, :, ::-1]", "source": 1, "target": 2}, {"conversion": "def convert(var):\n  return torch.from_numpy(var)", "source": 1, "target": 3}, {"conversion": "def convert(var):\n  return var[:, :, ::-1]", "source": 2, "target": 1}, {"conversion": "def convert(var):\n  return var.permute(2, 0, 1)", "source": 3, "target": 4}, {"conversion": "def convert(var):\n  return torch.unsqueeze(var, 0)", "source": 4, "target": 5}]}